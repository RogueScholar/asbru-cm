---
# yamllint disable rule:key-ordering rule:quoted-strings
version: 2.1
orbs:
  irc: circleci/irc@0.1.0
executors:
  golang-alpine-docker:
    docker:
      - image: golang:alpine
    working_directory: /home/circleci/asbru-cm
  ubuntu-disco-docker:
    docker:
      - image: circleci/buildpack-deps:disco
    shell: /bin/bash
    working_directory: /home/circleci/asbru-cm
    environment:
      DH_VERBOSE: "1"
  ubuntu-xenial-machine:
    machine:
      image: ubuntu-1604:201903-01
    shell: /bin/bash
    working_directory: /home/circleci/asbru-cm
    environment:
      DH_VERBOSE: "1"
jobs:
  test_scripts:
    executor: golang-alpine-docker
    steps:
      - run:
          name: Update apks and install git
          command: |
            apk update && apk upgrade
            apk add bash coreutils findutils git gzip openssh-client sudo tar wget xz
      - run:
          name: Install shellcheck
          command: |
            cd $(mktemp -d) && wget https://shellcheck.storage.googleapis.com/shellcheck-latest.linux.x86_64.tar.xz
            tar xvaf shellcheck-latest.linux.x86_64.tar.xz && chmod 0755 ./shellcheck-latest/shellcheck
            sudo cp ./shellcheck-latest/shellcheck /usr/local/bin
      - run:
          name: Install shfmt v3
          command: |
            cd $(mktemp -d); go mod init tmp; go get mvdan.cc/sh/v3/cmd/shfmt
            go build mvdan.cc/sh/v3/cmd/shfmt && go install mvdan.cc/sh/v3/cmd/shfmt
            sudo cp -f ./shfmt /usr/local/bin
      - checkout
      - run:
          name: Test shell scripts and record file stats
          command: |
            set +e; set +o pipefail; mkdir -p /home/circleci/script-test-reports
            echo "Calculating script file stats..." | tee /home/circleci/script-test-reports/script-file-stats.txt
            echo -e '\nlines words chars filename\n' >>/home/circleci/script-test-reports/script-file-stats.txt
            find /home/circleci/packages -type f -name '*.sh' | xargs wc -lmw 2>&1 | tee -a \
            /home/circleci/script-test-reports/script-file-stats.txt
            echo "Running shellcheck tests..." | tee /home/circleci/script-test-reports/shellcheck-output.txt
            find /home/circleci/packages -type f -name '*.sh' | xargs shellcheck -ax -s bash 2>&1 | tee -a \
            /home/circleci/script-test-reports/shellcheck-output.txt
            echo "Running shfmt (v3.0.0-alpha2) tests..." | tee /home/circleci/script-test-reports/shfmt3-output.txt
            find /home/circleci/packages -type f -name '*.sh' | xargs shfmt -d -ci -s -i 2 2>&1 | tee -a \
            /home/circleci/script-test-reports/shfmt3-output.txt
      - store_artifacts:
          path: /home/circleci/script-test-reports
          destination: script-tests
  build_asbru_deb_and_save:
    executor: ubuntu-disco-docker
    steps:
      - run:
          name: Use unminimize script to rehydrate Docker image
          command: yes | sudo unminimize
      - checkout
      - run:
          name: Add complete set of Ubuntu repos and install build dependencies
          command: |
            sudo mv -f ./.circleci/disco-sources.list /etc/apt/sources.list
            curl -L https://packagecloud.io/asbru-cm/asbru-cm/gpgkey | sudo apt-key add -
            sudo apt update && DEBIAN_FRONTEND=noninteractive sudo apt full-upgrade
            DEBIAN_FRONTEND=noninteractive sudo apt install adequate autopkgtest build-essential dbus-user-session \
            dbus-x11 debhelper devscripts dh-acc dh-autoreconf dh-buildinfo dh-exec dh-make dh-make-perl \
            dh-strip-nondeterminism dpkg-dev equivs ftp gtk2-engines-pixbuf libcanberra-gtk-module \
            libcrypt-blowfish-perl libcrypt-cbc-perl libcrypt-rijndael-perl libexpect-perl libnet-arp-perl \
            libnet-proxy-perl libossp-uuid-perl libsocket6-perl man-db pkg-perl-autopkgtest quilt telnet
      - run:
          name: Build asbru-cm Debian package
          command: sudo bash ./make_debian.sh
      - persist_to_workspace:
          root: /home/circleci/asbru-cm/tmp
          paths: asbru-cm_*.deb
      - store_artifacts:
          path: /home/circleci/packages/asbru-cm/tmp/asbru-cm_5.2.0-1~local_all.deb
      - store_artifacts:
          path: /home/circleci/packages/asbru-cm/tmp/asbru-cm_5.2.0-1~local.dsc
      - store_artifacts:
          path: /home/circleci/packages/asbru-cm/tmp/asbru-cm_5.2.0-1~local_amd64.changes
      - store_artifacts:
          path: /home/circleci/packages/asbru-cm/tmp/asbru-cm_5.2.0-1~local_amd64.buildinfo
      - store_artifacts:
          path: /home/circleci/packages/asbru-cm/tmp/asbru-cm_5.2.0-1~local.debian.tar.xz
  test_deb_package:
    executor: ubuntu-xenial-machine
    environment:
      CHROOT: "/home/circleci/piuparts/base.tar.xz"
      IRC_SERVER: "irc.st-city.net"
    steps:
      - checkout
      - run:
          name: Add complete set of Ubuntu repos and install testing packages
          command: |
            sudo mv -f ./.circleci/xenial-sources.list /etc/apt/sources.list
            curl -L https://packagecloud.io/asbru-cm/asbru-cm/gpgkey | sudo apt-key add -
            sudo apt update && DEBIAN_FRONTEND=noninteractive sudo apt install adequate check-all-the-things dbus \
            dbus-user-session dbus-x11 debootstrap distro-info-data eatmydata gconf-service gconf-service-backend \
            gconf2-common libeatmydata1 libgconf-2-4 lintian pbuilder piuparts ucf
      - attach_workspace:
          at: deb
      - run:
          name: Install freshly built packages with dpkg debug logging
          command: >
            mkdir -p /home/circleci/deb-test-reports; echo -e "Installing package with dpkg...\n" |
            tee /home/circleci/deb-test-reports/dpkg-install-log.txt; sudo dpkg -D20600
            --log=/home/circleci/deb-test-reports/dpkg-install-log.txt -Ri /home/circleci
      - restore_cache:
          key: asbru-cache-v1-{{ checksum "debian/changelog" }}
          name: Piuparts chroot tarball
      - run:
          name: Test package installation results with piuparts
          command: >
            mkdir -p /home/circleci/piuparts; echo "Testing package install results with piuparts..." |
            tee /home/circleci/deb-test-reports/piuparts.txt; find /home/circleci -type f -name '*.deb' -print0 | sudo
            xargs -0t piuparts --warn-on-others --upgrade-before-dist-upgrade --single-changes-list -D ubuntu -d disco
            -l /home/circleci/deb-test-reports/piuparts.txt -s $CHROOT
      - save_cache:
          key: asbru-cache-v1-{{ checksum "debian/changelog" }}
          paths: /home/circleci/piuparts/
      - run:
          name: Test package installation results with check-all-the-things
          command: |
            echo "Testing software environment results with check-all-the-things..."
            find /home/circleci -type f -name '*.deb' | sudo xargs check-all-the-things -a -d ubuntu -r disco 2>&1 | \
            tee -a /home/circleci/deb-test-reports/check-all-the-things.txt
      - store_artifacts:
          path: /home/circleci/deb-test-reports
          destination: deb-package-tests
      - irc/notify:
          channel: "#asbru-cm"
          # yamllint disable rule:line-length
          message: "Your CircleCI job for 'asbru-cm' (debian branch) has completed successfully! View it at $CIRCLE_BUILD_URL"
          # yamllint enable rule:line-length
workflows:
  version: 2
  asbru-cm-build-packages-and-test:
    jobs:
      - test_scripts:
          filters:
            branches:
              only: debian
      - build_asbru_deb_and_save:
          filters:
            branches:
              only: debian
      - test_deb_package:
          requires:
            - build_asbru_deb_and_save
          filters:
            branches:
              only: debian
...
